---
title: "AI-Empowered Actuaries: An Introduction to AI Agents"
subtitle: ""
author: "Adam Troyer, Lockton Re"
---

---

![](images/cas-antitrust-slide.png)

## Agenda
<br>

:::{.incremental}
- 2025: Year of the Agent
- What is an Agent?
- Actuarial Example: Reserving Agent
:::

## 2025: Year of the Agent

:::: {.columns}
::: {.column width="50%"}
![](images/scary-agent.png){.fragment .fade-in}
:::
::: {.column width="50%"}
![](images/friendly-agent.png){.fragment .fade-in}
:::
::::

## 2025: Year of the Agent

::: {.card .zoom-focus .fragment}
![](images/Time_Magazine_logo.svg.png)  
**<span style="font-size: 1.5em">5 Predictions for AI in 2025</span>**  
January 16, 2025

> “In 2025, we’ll begin to see a shift from chatbots and image generators toward 'agentic' systems that can act autonomously to complete tasks.”  
[Read more →](https://time.com/7204665/ai-predictions-2025/)
:::

## 2025: Year of the Agent

::: {.card .zoom-focus}
![](images/The_Guardian_2018.svg.png)         
**<span style="font-size: 1.5em">How will AI reshape 2025?</span>**  
December 28, 2024

> “If 2024 was the year of large language models (LLMs), then 2025 looks like the year of AI “agents”.”  
[Read more →](https://www.theguardian.com/commentisfree/2024/dec/28/llms-large-language-models-gen-ai-agents-spreadsheets-corporations-work)
:::

## 2025: Year of the Agent

::: {.card .zoom-focus}
![](images/Salesforce-logo.png)  
**<span style="font-size: 1.5em">What’s Next for the Agentic Era?</span>**  
December 16, 2024

> “AI agents are poised to revolutionize search, moving beyond simply finding information to completing complex tasks.”  
[Read more →](https://www.salesforce.com/news/stories/future-of-ai-agents-2025/)
:::

## 2025: Year of the Agent

::: {.card .zoom-focus}
![](images/IBM_logo.svg)  
**<span style="font-size: 1.5em">AI Agents in 2025</span>**  
March 4, 2025

> “It’s impossible to take two steps across the tech media landscape without stumbling over an article hailing 2025 as the year of the AI agent.”  
[Read more →](https://www.ibm.com/think/insights/ai-agents-2025-expectations-vs-reality)
:::

## Year of the Agent - It has to be true!!

::: {.card-container}

::: {.card}
![](images/Time_Magazine_logo.svg.png)  
**<span style="font-size: 1.5em">5 Predictions for AI in 2025</span>**  
January 16, 2025

> “In 2025, we’ll begin to see a shift from chatbots and image generators toward 'agentic' systems that can act autonomously to complete tasks.”  
[Read more →](https://time.com/7204665/ai-predictions-2025/)
:::

::: {.card}
![](images/The_Guardian_2018.svg.png)         
**<span style="font-size: 1.5em">How will AI reshape 2025?</span>**  
December 28, 2024

> “If 2024 was the year of large language models (LLMs), then 2025 looks like the year of AI “agents”.”  
[Read more →](https://www.theguardian.com/commentisfree/2024/dec/28/llms-large-language-models-gen-ai-agents-spreadsheets-corporations-work)
:::

::: {.card}
![](images/Salesforce-logo.png)  
**<span style="font-size: 1.5em">What’s Next for the Agentic Era?</span>**  
December 16, 2024

> “AI agents are poised to revolutionize search, moving beyond simply finding information to completing complex tasks.”  
[Read more →](https://www.salesforce.com/news/stories/future-of-ai-agents-2025/)
:::

::: {.card}
![](images/IBM_logo.svg)  
**<span style="font-size: 1.5em">AI Agents in 2025</span>**  
March 4, 2025

> “It’s impossible to take two steps across the tech media landscape without stumbling over an article hailing 2025 as the year of the AI agent.”  
[Read more →](https://www.ibm.com/think/insights/ai-agents-2025-expectations-vs-reality)
:::
:::


# What is an Agent? {background-color="black" background-image='images/locktonre-divider-slide.png' background-size="cover" background-position="center" footer=false}

## Why do we need agents?

<br> 

:::: {.r-stack}
![](images/llm-slide-1.png){.fragment .current-visible fragment-index=0}

![](images/llm-slide-2.png){.fragment .current-visible fragment-index=1}

![](images/llm-slide-3.png){.fragment .current-visible fragment-index=2}

![](images/llm-slide-4.png){.fragment .current-visible fragment-index=3}

![](images/llm-slide-5.png){.fragment .current-visible fragment-index=4}

![](images/llm-slide-6.png){.fragment .current-visible fragment-index=5}

![](images/llm-slide-7.png){.fragment .current-visible fragment-index=6}
::::

---

## OpenAI definition 

<br>

![](images/openai-agent-definition.png){.border .rounded}

::: {.fragment}
::: {.shadow-box}
> Applications that integrate LLMs but don't use them to control workflow execution—think simple
chatbots, single-turn LLMs, or sentiment classifiers—are not agents.
:::

<p style="font-size: 0.7em; text-align: right; color: #687074;">Source: <a href="https://cdn.openai.com/business-guides-and-resources/a-practical-guide-to-building-agents.pdf" style="color: #00AEEF;">A practical guide to building agents</a></p>
:::

---

## Anthropic definition
<br>

### **Agentic Systems**

::: {.fragment}
::: {.shadow-box}
> **Workflows** are systems where LLMs and tools are orchestrated through predefined code paths.
:::
:::

::: {.fragment}
::: {.shadow-box}
> **Agents**, on the other hand, are systems where LLMs dynamically direct their own processes and tool usage, maintaining control over how they accomplish tasks.
:::

<p style="font-size: 0.7em; text-align: right; color: #687074;">Source: <a href="https://www.anthropic.com/engineering/building-effective-agents" style="color: #00AEEF;">Building Effective Agents</a></p>
:::

---

## What is an ~~agent~~ agentic system?
### My definition - in scribbles

:::: {.r-stack style="width: 90%; margin: 0 auto;"}
![](images/Agent-1.png){.fragment .current-visible fragment-index=0}

![](images/Agent-2.png){.fragment .current-visible fragment-index=1}

![](images/Agent-3.png){.fragment .current-visible fragment-index=2}

![](images/Agent-4.png){.fragment .current-visible fragment-index=3}

![](images/Agent-5.png){.fragment .current-visible fragment-index=4}

![](images/Agent-6.png){.fragment .current-visible fragment-index=5}

![](images/Agent-7.png){.fragment .current-visible fragment-index=6}

![](images/Agent-8.png){.fragment .current-visible fragment-index=7}

![](images/Agent-9.png){.fragment .current-visible fragment-index=8}
::::

---

## What is an ~~agent~~ agentic system?
### My definition - in scribbles

:::: {.shadow-box style="width: 80%; margin: 0 auto;"}
![](images/Agent-9.png){.border .rounded}
::::

---

## Multi-agent systems
<br>

:::: {.shadow-box style="width: 80%; margin: 0 auto;"}
![](images/Multi-agent.png){.border .rounded}
::::

---

## Why agents? 
### Benefits vs traditional workflow automation

::: {.fragment}
::: {.shadow-box style="width: 70%; margin: 0 auto;"}
![](images/agents-vs-rpa.png){.border .rounded}
:::
:::

---

## Why **NOT** agents? 
<br>

::: {.incremental}
- Complicated!
- Agents/LLMs are stochastic - hallucinations!!
- Latency/speed vs. cost
- Find simplest solution possible
:::

<br>

::: {.fragment}
::: {.shadow-box}
> For many applications, however, optimizing single LLM calls with retrieval and in-context examples is usually enough.
:::

<p style="font-size: 0.7em; text-align: right; color: #687074;">Source: <a href="https://www.anthropic.com/engineering/building-effective-agents" style="color: #00AEEF;">Building Effective Agents</a></p>
:::

---

## Simple Example

```{python}
#| echo: false
#| output: false
import os

# Try to load from .env file if it exists (for local development)
try:
    from dotenv import load_dotenv, find_dotenv
    load_dotenv(find_dotenv(raise_error_if_not_found=False))
except ImportError:
    pass  # Continue without dotenv if not available

tavily_api_key = os.getenv("TAVILY_API_KEY")
```

```{python}
#| echo: true
#| output-location: fragment
#| code-line-numbers: "|12|5-7,9,13|14|"
from langchain_tavily import TavilySearch
from langgraph.prebuilt import create_react_agent
from IPython.display import Image, display

def multiply(a: int, b: int) -> int:
    """Multiply two numbers."""
    return a * b

tavily_search_tool = TavilySearch(max_results=1, tavily_api_key=tavily_api_key)

agent = create_react_agent(
    model="openai:gpt-4.1",
    tools=[multiply, tavily_search_tool],  
    prompt="You are a helpful assistant that speaks like a pirate."
)

display(Image(agent.get_graph().draw_mermaid_png()))
```

---

## Simple Example - Output

```{python}
#| echo: true
#| output-location: fragment
#| code-line-numbers: "|1|4-6"
user_input = "Multiply the Timberwolves and Lakers score from Game 5."

final_answer = None
for step in agent.stream({"messages": [{"role": "user", "content": user_input}]}, stream_mode="values"):
    final_answer = step["messages"][-1].content
    step["messages"][-1].pretty_print()
```

---

## Simple Example - Final Answer
<br>

:::{.fragment}
:::{.shadow-box}
> **Question:** `{python} user_input`
:::
:::

:::{.fragment}
:::{.shadow-box}
> **Answer:** `{python} final_answer`
:::
:::

---

## Currently useful agents

### Research agents

:::: {.columns}
::: {.column width="30%"}
:::{.incremental}
- [OpenAI's Deep Research](https://openai.com/index/introducing-deep-research/)
- [Google's Deep Research](https://blog.google/products/gemini/google-gemini-deep-research/)
- [GPT Researcher](https://gptresearcher.com/) - Open Source
:::
:::

::: {.column width="70%"}
:::{.fragment style="height: 400px;"}
<iframe src="https://player.vimeo.com/video/1052827364?h=da223fbb4f&keyboard=0&title=0&byline=0&portrait=0"
  width="100%" height="100%" frameborder="0"
  allow="autoplay; fullscreen; picture-in-picture"
  allowfullscreen>
</iframe>
:::
:::
::::

## Currently useful agents

### Coding agents

:::{.incremental}
- [Cursor](https://www.cursor.com/en)
- [Windsurf](https://windsurf.com/editor)
- [Claude Code](https://www.anthropic.com/claude-code)
:::

:::{.fragment}
![](images/Cursor-tweet.png)
:::

## Currently useful agents

### Generic agents

:::: {.columns}
::: {.column width="30%"}
:::{.incremental}
- [AutoGPT](https://agpt.co)
- [Manus.ai](https://manus.ai/)
- [OpenAI's o3](https://openai.com/index/introducing-o3-and-o4-mini/)
:::
:::

::: {.column width="70%"}
:::{.fragment style="height: 400px;"}
<iframe src="https://player.vimeo.com/video/1076103584?h=72021e4db7&keyboard=0&title=0&byline=0&portrait=0"
  width="100%" height="100%" frameborder="0"
  allow="autoplay; fullscreen; picture-in-picture"
  allowfullscreen>
</iframe>
:::
:::
::::

# Actuarial Example: Reserving Agent {background-color="black" background-image='images/locktonre-divider-slide.png' background-size="cover" background-position="center" footer=false}

## The motivation

```{python}
#| echo: true
#| code-line-numbers: "|5-6|11,17|8|22-24"
import chainladder as cl

triangle = cl.load_sample('raa')

prompt = f"""You are a P&C loss reserving actuary. Only return the final answer in sentence form.
             Here is the loss triangle for you to work with: {triangle.to_json()}"""

request = "What is the standard chain ladder loss reserve estimate for this triangle?"

agent_old = create_react_agent(
    model="openai:gpt-4o",
    tools = [],  
    prompt=prompt
)

agent_new = create_react_agent(
    model="openai:gpt-4.1",
    tools = [],  
    prompt=prompt
)

response_old = agent_old.invoke({"messages": [{"role": "user", "content": request}]})
response_new = agent_new.invoke({"messages": [{"role": "user", "content": request}]})
response_actual = cl.Chainladder().fit(triangle)
```

---

## The motivation
<br>

:::: {.columns}
::: {.column width="50%"}
:::{.fragment}
### OpenAI's gpt-4o
`{python} response_old['messages'][1].content`
:::

<br>

:::{.fragment}
### OpenAI's gpt-4.1
`{python} response_new['messages'][1].content`
:::

### 😔 😔 😭 😭   {.fragment}
:::

::: {.column width="50%"}
:::{.fragment}
### python-chainladder
`{python} f"${int(response_actual.ibnr_.sum()):,}"`
:::

<br>
<br>

:::{.fragment}
### OpenAI's o3
Gets the correct answer, but takes ~40 seconds
:::
:::
::::

---

## Reserving Agent

:::{.fragment}
A thin AI Agent on top of the Chainladder Python package. Proof of concept.
:::

<br>

:::: {.columns}
::: {.column width="50%"}
:::{.fragment}
### Toolkit
:::{.incremental}
- [Chainladder package](https://chainladder-python.readthedocs.io/en/latest/)
- [Langgraph framework](https://langgraph.dev/)
    - [Langgraph supervisor](https://github.com/langchain-ai/langgraph-supervisor-py)
- [Gradio for the UI](https://www.gradio.app)
- [Coded with help of Windsurf](https://windsurf.com/editor)
:::
:::
:::

::: {.column width="50%"}
:::{.fragment}
### Functionality
:::{.incremental}
- Perform checks on triangle data
- Apply available reserving methods
- Evaluate results and create a detailed report
- Create plots to visualize
:::
:::
:::
::::

---

## Agent structure
<br>

:::: {.shadow-box style="width: 80%; margin: 0 auto;"}
![](images/Multi-agent.png){.border .rounded}
::::

---

## Reserving Agent in Action

:::: {.shadow-box style="width: 80%; margin: 0 auto;"}
![](images/Multi-agent.png){.border .rounded}
::::

---

## Reserving Agent in Action (2)

:::: {.shadow-box style="width: 80%; margin: 0 auto;"}
![](images/Multi-agent.png){.border .rounded}
::::

# Final Thoughts {background-color="black" background-image='images/locktonre-divider-slide.png' background-size="cover" background-position="center" footer=false}

## Where I'm using agents / agentic systems
<br>

:::: {.columns}
::: {.column width="50%"}
:::{.fragment}
### Present
:::{.incremental}
- Coding (Windsurf)
- Research reports (OpenAI Deep Research, GPTResearcher)
- Chatting with US Statutory data
- Earnings call chat and summaries
- Document extraction (rate filings, etc.)
:::
:::
:::

::: {.column width="50%"}
:::{.fragment}
### Future
:::{.incremental}
- Reinsurance experience / exposure analysis
- Reinsurance structuring
- Automated workflows
:::
:::
:::
::::

---

## Conclusion - Is 2025 the Year of the Agent??
<br>

:::: {.columns}
::: {.column width="60%"}
:::{.fragment}
### What can you do?

:::{.incremental}
- Use LLMs / agents in personal life
- Read about agents
- Start experimenting
:::
:::

:::{.fragment}
### Links and Resources

- [Anthropic - Building Effective Agents](https://www.anthropic.com/engineering/building-effective-agents)
- [OpenAI on Agents](https://cdn.openai.com/business-guides-and-resources/a-practical-guide-to-building-agents.pdf)
- [LangGraph Docs](https://langgraph.dev/)
:::
:::

::: {.column width="40%"}
:::{.fragment}
![](images/friendly-agent.png){.fragment .fade-in}
:::
:::
::::

---

## Contact Info
<br>

- This presentation: [https://ai-agents-cas-spring25.netlify.app/](https://ai-agents-cas-spring25.netlify.app/)
- <i class="fa-brands fa-github"></i> [Presentation GitHub repo](https://github.com/problemofpoints/ai-agents-cas-spring25)
- Link to app
- <i class="fa-brands fa-github"></i> [Chainladder agent GitHub repo](https://github.com/problemofpoints/chainladder-python-agent)